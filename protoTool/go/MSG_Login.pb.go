// Code generated by protoc-gen-go.
// source: MSG_Login.proto
// DO NOT EDIT!

/*
Package MSG_Login is a generated protocol buffer package.

It is generated from these files:
	MSG_Login.proto

It has these top-level messages:
	CS_UserBind_Req
	CS_UserRegister_Req
	SC_UserRegister_Rsp
	CS_Login_Req
	SC_Login_Rsp
*/
package MSG_Login

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// add by stefanchen
// server
type SUBMSG int32

const (
	SUBMSG_Begin           SUBMSG = 0
	SUBMSG_CS_UserBind     SUBMSG = 1
	SUBMSG_SC_UserBind     SUBMSG = 2
	SUBMSG_CS_UserRegister SUBMSG = 3
	SUBMSG_SC_UserRegister SUBMSG = 4
	SUBMSG_CS_Login        SUBMSG = 5
	SUBMSG_SC_Login        SUBMSG = 6
	SUBMSG_CS_Logout       SUBMSG = 7
	SUBMSG_SC_Logout       SUBMSG = 8
	SUBMSG_CS_Certificate  SUBMSG = 9
	SUBMSG_SC_Certificate  SUBMSG = 10
)

var SUBMSG_name = map[int32]string{
	0:  "Begin",
	1:  "CS_UserBind",
	2:  "SC_UserBind",
	3:  "CS_UserRegister",
	4:  "SC_UserRegister",
	5:  "CS_Login",
	6:  "SC_Login",
	7:  "CS_Logout",
	8:  "SC_Logout",
	9:  "CS_Certificate",
	10: "SC_Certificate",
}
var SUBMSG_value = map[string]int32{
	"Begin":           0,
	"CS_UserBind":     1,
	"SC_UserBind":     2,
	"CS_UserRegister": 3,
	"SC_UserRegister": 4,
	"CS_Login":        5,
	"SC_Login":        6,
	"CS_Logout":       7,
	"SC_Logout":       8,
	"CS_Certificate":  9,
	"SC_Certificate":  10,
}

func (x SUBMSG) String() string {
	return proto.EnumName(SUBMSG_name, int32(x))
}
func (SUBMSG) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ErrorCode int32

const (
	ErrorCode_Invalid                 ErrorCode = 0
	ErrorCode_Success                 ErrorCode = 1
	ErrorCode_Fail                    ErrorCode = 2
	ErrorCode_UserNotExistOrPasswdErr ErrorCode = 3
)

var ErrorCode_name = map[int32]string{
	0: "Invalid",
	1: "Success",
	2: "Fail",
	3: "UserNotExistOrPasswdErr",
}
var ErrorCode_value = map[string]int32{
	"Invalid": 0,
	"Success": 1,
	"Fail":    2,
	"UserNotExistOrPasswdErr": 3,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// CS_UserBind
type CS_UserBind_Req struct {
	Account string `protobuf:"bytes,1,opt,name=Account" json:"Account,omitempty"`
	Passwd  string `protobuf:"bytes,2,opt,name=Passwd" json:"Passwd,omitempty"`
}

func (m *CS_UserBind_Req) Reset()                    { *m = CS_UserBind_Req{} }
func (m *CS_UserBind_Req) String() string            { return proto.CompactTextString(m) }
func (*CS_UserBind_Req) ProtoMessage()               {}
func (*CS_UserBind_Req) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// CS_UserRegister
type CS_UserRegister_Req struct {
	Account      string `protobuf:"bytes,1,opt,name=Account" json:"Account,omitempty"`
	Passwd       string `protobuf:"bytes,2,opt,name=Passwd" json:"Passwd,omitempty"`
	DeviceSerial string `protobuf:"bytes,3,opt,name=DeviceSerial" json:"DeviceSerial,omitempty"`
	DeviceName   string `protobuf:"bytes,4,opt,name=DeviceName" json:"DeviceName,omitempty"`
}

func (m *CS_UserRegister_Req) Reset()                    { *m = CS_UserRegister_Req{} }
func (m *CS_UserRegister_Req) String() string            { return proto.CompactTextString(m) }
func (*CS_UserRegister_Req) ProtoMessage()               {}
func (*CS_UserRegister_Req) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// SC_UserRegister
type SC_UserRegister_Rsp struct {
	Ret ErrorCode `protobuf:"varint,1,opt,name=Ret,enum=MSG_Login.ErrorCode" json:"Ret,omitempty"`
}

func (m *SC_UserRegister_Rsp) Reset()                    { *m = SC_UserRegister_Rsp{} }
func (m *SC_UserRegister_Rsp) String() string            { return proto.CompactTextString(m) }
func (*SC_UserRegister_Rsp) ProtoMessage()               {}
func (*SC_UserRegister_Rsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// CS_Login
type CS_Login_Req struct {
	Account      string `protobuf:"bytes,1,opt,name=Account" json:"Account,omitempty"`
	Passwd       string `protobuf:"bytes,2,opt,name=Passwd" json:"Passwd,omitempty"`
	DeviceSerial string `protobuf:"bytes,3,opt,name=DeviceSerial" json:"DeviceSerial,omitempty"`
	DeviceName   string `protobuf:"bytes,4,opt,name=DeviceName" json:"DeviceName,omitempty"`
}

func (m *CS_Login_Req) Reset()                    { *m = CS_Login_Req{} }
func (m *CS_Login_Req) String() string            { return proto.CompactTextString(m) }
func (*CS_Login_Req) ProtoMessage()               {}
func (*CS_Login_Req) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// SC_Login
type SC_Login_Rsp struct {
	Ret ErrorCode `protobuf:"varint,1,opt,name=Ret,enum=MSG_Login.ErrorCode" json:"Ret,omitempty"`
}

func (m *SC_Login_Rsp) Reset()                    { *m = SC_Login_Rsp{} }
func (m *SC_Login_Rsp) String() string            { return proto.CompactTextString(m) }
func (*SC_Login_Rsp) ProtoMessage()               {}
func (*SC_Login_Rsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*CS_UserBind_Req)(nil), "MSG_Login.CS_UserBind_Req")
	proto.RegisterType((*CS_UserRegister_Req)(nil), "MSG_Login.CS_UserRegister_Req")
	proto.RegisterType((*SC_UserRegister_Rsp)(nil), "MSG_Login.SC_UserRegister_Rsp")
	proto.RegisterType((*CS_Login_Req)(nil), "MSG_Login.CS_Login_Req")
	proto.RegisterType((*SC_Login_Rsp)(nil), "MSG_Login.SC_Login_Rsp")
	proto.RegisterEnum("MSG_Login.SUBMSG", SUBMSG_name, SUBMSG_value)
	proto.RegisterEnum("MSG_Login.ErrorCode", ErrorCode_name, ErrorCode_value)
}

func init() { proto.RegisterFile("MSG_Login.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 374 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x92, 0xc1, 0x8b, 0xda, 0x40,
	0x14, 0xc6, 0x8d, 0xd1, 0x68, 0x9e, 0xa9, 0x0e, 0xcf, 0xd2, 0x06, 0x0a, 0xa5, 0xe4, 0x50, 0x8a,
	0x07, 0x0f, 0x2d, 0xf4, 0xd6, 0x43, 0x9d, 0x5a, 0x29, 0xa8, 0x2d, 0x19, 0x3c, 0x87, 0x34, 0x99,
	0xca, 0x80, 0xcd, 0xb8, 0x33, 0xa3, 0xbb, 0x7f, 0xc0, 0xde, 0xf6, 0xaf, 0xda, 0xff, 0x6c, 0x99,
	0xc4, 0xb8, 0xea, 0x69, 0xd9, 0xcb, 0x1e, 0xbf, 0xdf, 0x37, 0x0c, 0xdf, 0xfb, 0xde, 0x83, 0xc1,
	0x82, 0xcd, 0x92, 0xb9, 0x5c, 0x8b, 0x62, 0xbc, 0x55, 0xd2, 0x48, 0xf4, 0x8f, 0x20, 0xa2, 0x30,
	0xa0, 0x2c, 0x59, 0x69, 0xae, 0x26, 0xa2, 0xc8, 0x93, 0x98, 0x5f, 0x61, 0x08, 0x9d, 0xef, 0x59,
	0x26, 0x77, 0x85, 0x09, 0x9d, 0x0f, 0xce, 0x27, 0x3f, 0xae, 0x25, 0xbe, 0x01, 0xef, 0x4f, 0xaa,
	0xf5, 0x75, 0x1e, 0x36, 0x4b, 0xe3, 0xa0, 0xa2, 0x3b, 0x07, 0x86, 0x87, 0x5f, 0x62, 0xbe, 0x16,
	0xda, 0x70, 0xf5, 0xbc, 0x9f, 0x30, 0x82, 0xe0, 0x07, 0xdf, 0x8b, 0x8c, 0x33, 0xae, 0x44, 0xba,
	0x09, 0xdd, 0xd2, 0x3d, 0x63, 0xf8, 0x1e, 0xa0, 0xd2, 0xcb, 0xf4, 0x3f, 0x0f, 0x5b, 0xe5, 0x8b,
	0x13, 0x12, 0x7d, 0x83, 0x21, 0xa3, 0x17, 0x61, 0xf4, 0x16, 0x3f, 0x82, 0x1b, 0xf3, 0x2a, 0x48,
	0xff, 0xf3, 0xeb, 0xf1, 0x63, 0x27, 0x53, 0xa5, 0xa4, 0xa2, 0x32, 0xe7, 0xb1, 0x7d, 0x10, 0xdd,
	0x3a, 0x10, 0x50, 0x56, 0x79, 0x2f, 0x38, 0xc5, 0x57, 0x08, 0x18, 0xad, 0x53, 0x3c, 0x3d, 0xfe,
	0xe8, 0xde, 0x01, 0x8f, 0xad, 0x26, 0x0b, 0x36, 0x43, 0x1f, 0xda, 0x13, 0xbe, 0x16, 0x05, 0x69,
	0xe0, 0x00, 0x7a, 0x27, 0x6b, 0x26, 0x8e, 0x05, 0x87, 0x92, 0x4a, 0xd0, 0xc4, 0xe1, 0xf1, 0x10,
	0xea, 0xd6, 0x88, 0x6b, 0xe1, 0x45, 0x95, 0xa4, 0x85, 0x01, 0x74, 0xeb, 0x7e, 0x48, 0xdb, 0xaa,
	0x3a, 0x27, 0xf1, 0xf0, 0x15, 0xf8, 0x95, 0x27, 0x77, 0x86, 0x74, 0xac, 0xac, 0x4c, 0x2b, 0xbb,
	0x88, 0xd0, 0xa7, 0x2c, 0xa1, 0x5c, 0x19, 0xf1, 0x4f, 0x64, 0xa9, 0xe1, 0xc4, 0xb7, 0x8c, 0xd1,
	0x33, 0x06, 0xa3, 0x39, 0xf8, 0xc7, 0xa9, 0xb0, 0x07, 0x9d, 0x5f, 0xc5, 0x3e, 0xdd, 0x88, 0x9c,
	0x34, 0xac, 0x60, 0xbb, 0x2c, 0xe3, 0x5a, 0x13, 0x07, 0xbb, 0xd0, 0xfa, 0x99, 0x8a, 0x0d, 0x69,
	0xe2, 0x3b, 0x78, 0x6b, 0x43, 0x2e, 0xa5, 0x99, 0xde, 0x08, 0x6d, 0x7e, 0xab, 0x6a, 0x11, 0x53,
	0xa5, 0x88, 0xfb, 0xd7, 0x2b, 0x8f, 0xfe, 0xcb, 0x43, 0x00, 0x00, 0x00, 0xff, 0xff, 0x15, 0xef,
	0xeb, 0xc6, 0x07, 0x03, 0x00, 0x00,
}
